--- /dev/null
+++ /dev/null
@@ -670,23 +697,7 @@
 			Set<String> seen = new HashSet<String>();
 			for (Iterator<RosterGroup> giter = roster.getGroups().iterator(); giter.hasNext();) {
 				RosterGroup group = giter.next();
-				Collection<Contact> contacts = new ArrayList<Contact>();
-				for (Iterator<RosterEntry> iter = group.getEntries().iterator(); iter.hasNext();) {
-					RosterEntry entry = iter.next();
-					String address = parseAddressBase(entry.getUser());
-					if (seen.add(address)) {
-						
-						String name = entry.getName();
-						if (name == null)
-							name = address;
-						XmppAddress xaddress = new XmppAddress(name, address);
-						Contact contact = new Contact(xaddress, name);
-						contacts.add(contact);
-					}
-					else {
-						Log.d(TAG, "skipped duplicate contact");
-					}
-				}
+				Collection<Contact> contacts = fillContacts(group.getEntries().iterator(), seen);
 				ContactList cl = new ContactList(mUser.getAddress(), group.getName(), true, contacts, this);
 				mContactLists.add(cl);
 				if (mDefaultContactList == null)
@@ -696,17 +707,7 @@
 			}
 			if (roster.getUnfiledEntryCount() > 0) {
 				roster.createGroup("General");
-				Collection<Contact> contacts = new ArrayList<Contact>();
-				for (Iterator<RosterEntry> iter = roster.getUnfiledEntries().iterator(); iter.hasNext();) {
-					RosterEntry entry = iter.next();
-					String address = parseAddressBase(entry.getUser());
-					String name = entry.getName();
-					if (name == null)
-						name = address;
-					XmppAddress xaddress = new XmppAddress(name, address);
-					Contact contact = new Contact(xaddress, name);
-					contacts.add(contact);
-				}
+				Collection<Contact> contacts = fillContacts(roster.getUnfiledEntries().iterator(), null);
 				ContactList cl = new ContactList(mUser.getAddress(), "General" , true, contacts, this);
 				mDefaultContactList = cl;
 				notifyContactListLoaded(cl);
