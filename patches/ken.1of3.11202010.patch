@@ -640,10 +640,8 @@ public class XmppConnection extends ImConnection {
 			Roster roster = mConnection.getRoster();
 			roster.setSubscriptionMode(Roster.SubscriptionMode.manual);
 			listenToRoster(roster);
-			boolean haveGroup = false;
 			Set<String> seen = new HashSet<String>();
 			for (Iterator<RosterGroup> giter = roster.getGroups().iterator(); giter.hasNext();) {
-				haveGroup = true;
 				RosterGroup group = giter.next();
 				Collection<Contact> contacts = new ArrayList<Contact>();
 				for (Iterator<RosterEntry> iter = group.getEntries().iterator(); iter.hasNext();) {
@@ -669,9 +667,20 @@ public class XmppConnection extends ImConnection {
 				notifyContactListLoaded(cl);
 				notifyContactsPresenceUpdated(contacts.toArray(new Contact[0]));
 			}
-			if (!haveGroup) {
+			if (roster.getUnfiledEntryCount() > 0) {
 				roster.createGroup("Friends");
-				ContactList cl = new ContactList(mUser.getAddress(), "Friends" , true, new ArrayList<Contact>(), this);
+				Collection<Contact> contacts = new ArrayList<Contact>();
+				for (Iterator<RosterEntry> iter = roster.getUnfiledEntries().iterator(); iter.hasNext();) {
+					RosterEntry entry = iter.next();
+					String address = parseAddressBase(entry.getUser());
+					String name = entry.getName();
+					if (name == null)
+						name = address;
+					XmppAddress xaddress = new XmppAddress(name, address);
+					Contact contact = new Contact(xaddress, name);
+					contacts.add(contact);
+				}
+				ContactList cl = new ContactList(mUser.getAddress(), "Friends" , true, contacts, this);
 				mDefaultContactList = cl;
 				notifyContactListLoaded(cl);
 			}

